periodics:
- name: periodic-cluster-api-provider-azure-conformance-v1alpha3
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: master
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    - org: kubernetes
      repo: kubernetes
      base_ref: v1.18.6
      path_alias: k8s.io/kubernetes
  spec:
    containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20201005-0b243c0-1.18
        command:
          - "runner.sh"
          - "./scripts/ci-entrypoint.sh"
        env:
          - name: FOCUS
            value: "\\[Conformance\\]|\\[NodeConformance\\]"
          - name: SKIP
            value: "\\[Slow\\]|\\[Serial\\]|\\[Flaky\\]"
          - name: PARALLEL
            value: "true"
          - name: KUBERNETES_VERSION
            value: "v1.18.6"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 1
            memory: "4Gi"
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: periodic-conformance-v1alpha3
    testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
- name: periodic-cluster-api-provider-azure-capi-e2e
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: master
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20201005-0b243c0-1.18
      command:
      - "runner.sh"
      - "./scripts/ci-e2e.sh"
      env:
        - name: GINKGO_FOCUS
          value: "Cluster API E2E tests"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: periodic-capi-e2e
    testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
- name: periodic-cluster-api-provider-azure-coverage
  interval: 12h
  decorate: true
  path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: master
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20201005-0b243c0-1.18
      command:
      - runner.sh
      - bash
      args:
      - -c
      - |
        result=0
        ./scripts/ci-test-coverage.sh || result=$?
        cp coverage.* ${ARTIFACTS}
        cd ../../k8s.io/test-infra/gopherage
        GO111MODULE=on go build .
        ./gopherage filter --exclude-path="zz_generated,generated\.go" "${ARTIFACTS}/coverage.out" > "${ARTIFACTS}/filtered.cov" || result=$?
        ./gopherage html "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/coverage.html" || result=$?
        ./gopherage junit --threshold 0 "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/junit_coverage.xml" || result=$?
        exit $result
      securityContext:
        privileged: true
  annotations:
    testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
